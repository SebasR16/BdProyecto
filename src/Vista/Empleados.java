/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;



import controller.*;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import validators.*;

/**
 *
 * @author sebas
 */
public final class Empleados extends javax.swing.JFrame implements ActionListener{
PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;
     Connection con = BaseDeDatos.Conexion();
     DateFormat df = null;
     select s= new select(con);
     insert i=new insert(con);
     delete d= new delete(con);
     update u=new update(con);
     DefaultTableModel modelo = s.getEmpleados();
     DefaultTableModel modelo2 =s.getDepartamentos();
     DefaultTableModel modelo3 =s.getTitulos();
     DefaultTableModel modelo4 =s.getDept_Emp();
     DefaultTableModel modelo5 =s.getSalarios();
     DefaultTableModel modelo6 =s.getDept_Manager();
     String dato= null, dato1= null,dato2= null,dato3= null,dato4= null,dato5= null;
      validator validator= new validator();
     int seleccionar;
     
    public Empleados() throws SQLException {
        initComponents();
       
        ArrayList depas=s.listDepartamentos();
        for (int i = 0; i < depas.size(); i++) {
            departamento.addItem(depas.get(i).toString());
            departamento1.addItem(depas.get(i).toString());
        }
      
      this.birthmonth.addActionListener(this);
      this.birthyear.addActionListener(this);
      this.conmonth.addActionListener(this);
      this.conyear.addActionListener(this);
      this.datemonth.addActionListener(this);
      this.dateyear.addActionListener(this);
      this.todatemonth.addActionListener(this);
      this.todateyear.addActionListener(this);
      this.datemonth1.addActionListener(this);
      this.dateyear1.addActionListener(this);
      this.todatemonth1.addActionListener(this);
      this.todateyear1.addActionListener(this);
      this.datemonth2.addActionListener(this);
      this.dateyear2.addActionListener(this);
      this.todatemonth2.addActionListener(this);
      this.todateyear2.addActionListener(this);
      this.datemonth3.addActionListener(this);
      this.dateyear3.addActionListener(this);
      this.todatemonth3.addActionListener(this);
      this.todateyear3.addActionListener(this);
      this.Tablasalarios.setModel(modelo5);
    }
  


    public String userId() throws RemoteException {
        String n = null;
        int num = 0;
        con = BaseDeDatos.Conexion();
        String SQL = "SELECT MAX(employees.emp_no) FROM employees";

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);

            while (rs.next()) {
                String u = rs.getString(1);
                num = Integer.parseInt(u) + 1;

            }
            n = "" + num;
        } catch (SQLException ex) {
            System.out.println("Error " + ex);
        }
        return n;

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Primernombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Apellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        Genero = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        birthday = new javax.swing.JComboBox<>();
        birthmonth = new javax.swing.JComboBox<>();
        birthyear = new javax.swing.JComboBox<>();
        Contratacion = new javax.swing.JLabel();
        conday = new javax.swing.JComboBox<>();
        conmonth = new javax.swing.JComboBox<>();
        conyear = new javax.swing.JComboBox<>();
        Restablecer = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        update = new javax.swing.JButton();
        Registrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Findemployee = new javax.swing.JTextField();
        BuscarEmpleado = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        deptname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabladepartamentos = new javax.swing.JTable();
        Registrardept = new javax.swing.JButton();
        Restablecerdept = new javax.swing.JButton();
        updatedept = new javax.swing.JButton();
        Eliminardept = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        deptId = new javax.swing.JTextField();
        FindDepartment = new javax.swing.JTextField();
        BuscarDepartamento = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Numemp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dateday = new javax.swing.JComboBox<>();
        todateday = new javax.swing.JComboBox<>();
        datemonth = new javax.swing.JComboBox<>();
        todatemonth = new javax.swing.JComboBox<>();
        dateyear = new javax.swing.JComboBox<>();
        todateyear = new javax.swing.JComboBox<>();
        addtitles = new javax.swing.JLabel();
        Title = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tablatitulos = new javax.swing.JTable();
        Restablecertitle = new javax.swing.JButton();
        Registrartitle = new javax.swing.JButton();
        Eliminartitle = new javax.swing.JButton();
        updatetitle = new javax.swing.JButton();
        FindTitle = new javax.swing.JTextField();
        BuscarTitulo = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        Tablagerente = new javax.swing.JTable();
        RestablecerMan = new javax.swing.JButton();
        RegistrarMan = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        Numemp2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        departamento1 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        dateday3 = new javax.swing.JComboBox<>();
        datemonth3 = new javax.swing.JComboBox<>();
        dateyear3 = new javax.swing.JComboBox<>();
        todateday3 = new javax.swing.JComboBox<>();
        todatemonth3 = new javax.swing.JComboBox<>();
        todateyear3 = new javax.swing.JComboBox<>();
        EliminarMan = new javax.swing.JButton();
        updateMan = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        FindGerente = new javax.swing.JTextField();
        BuscarGerente = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        Numempleado = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Salario = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dateday1 = new javax.swing.JComboBox<>();
        todateday1 = new javax.swing.JComboBox<>();
        datemonth1 = new javax.swing.JComboBox<>();
        todatemonth1 = new javax.swing.JComboBox<>();
        dateyear1 = new javax.swing.JComboBox<>();
        todateyear1 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tablasalarios = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        Registrarsal = new javax.swing.JButton();
        Restablecersal = new javax.swing.JButton();
        Eliminarsal = new javax.swing.JButton();
        updatetitle1 = new javax.swing.JButton();
        Findsalario = new javax.swing.JTextField();
        BuscarSalario = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        Numemp1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        departamento = new javax.swing.JComboBox<>();
        Registraremp = new javax.swing.JButton();
        Restableceremp = new javax.swing.JButton();
        Eliminaremp = new javax.swing.JButton();
        updateemp = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tabladept_emp = new javax.swing.JTable();
        dateday2 = new javax.swing.JComboBox<>();
        todateday2 = new javax.swing.JComboBox<>();
        datemonth2 = new javax.swing.JComboBox<>();
        todatemonth2 = new javax.swing.JComboBox<>();
        dateyear2 = new javax.swing.JComboBox<>();
        todateyear2 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Findemp = new javax.swing.JTextField();
        BuscarEmp = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        NominaBtn = new javax.swing.JButton();
        EmpleadosBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 324));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Primer Nombre:");

        Primernombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Primernombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimernombreActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Apellido:");

        Apellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        TablaEmpleados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TablaEmpleados.setModel(modelo);
        TablaEmpleados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TablaEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaEmpleadosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TablaEmpleadosMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(TablaEmpleados);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Genero:");

        Genero.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Genero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "F", "M" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Nacimiento:");

        birthday.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        birthday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        birthmonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        birthmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        birthyear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        birthyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        Contratacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Contratacion.setText("Contratado:");

        conday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        conmonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        conmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        conyear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        conyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        Restablecer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Restablecer.setText("Restablecer");
        Restablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecerActionPerformed(evt);
            }
        });

        Eliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update.setText("Actualizar");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        Registrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Registrar.setText("Registrar");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Registrar empleados");

        BuscarEmpleado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarEmpleado.setText("Buscar");
        BuscarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(Contratacion))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3))))
                                    .addGap(36, 36, 36))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Apellido, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(conday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(conmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(conyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(birthmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(birthyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(Primernombre)
                                .addComponent(Registrar)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Restablecer)
                            .addGap(176, 176, 176)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(update)
                        .addGap(68, 68, 68)
                        .addComponent(Eliminar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Findemployee, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BuscarEmpleado)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Findemployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BuscarEmpleado))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(Eliminar)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Primernombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(birthmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Contratacion)
                    .addComponent(conday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Restablecer)
                    .addComponent(Registrar))
                .addGap(43, 43, 43))
        );

        jTabbedPane2.addTab("Empleados", jPanel1);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nombre de departamento:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Agregar departamentos ");

        Tabladepartamentos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Tabladepartamentos.setModel(modelo2);
        Tabladepartamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabladepartamentosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TabladepartamentosMouseExited(evt);
            }
        });
        jScrollPane2.setViewportView(Tabladepartamentos);

        Registrardept.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Registrardept.setText("Registrar");
        Registrardept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrardeptActionPerformed(evt);
            }
        });

        Restablecerdept.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Restablecerdept.setText("Restablecer");
        Restablecerdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecerdeptActionPerformed(evt);
            }
        });

        updatedept.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatedept.setText("Actualizar");
        updatedept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedeptActionPerformed(evt);
            }
        });

        Eliminardept.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Eliminardept.setText("Eliminar");
        Eliminardept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminardeptActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Número de departamento: ");

        BuscarDepartamento.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarDepartamento.setText("Buscar");
        BuscarDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarDepartamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel7))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deptname, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(deptId)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(Restablecerdept)
                        .addGap(54, 54, 54)
                        .addComponent(Registrardept)))
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(updatedept)
                        .addGap(52, 52, 52)
                        .addComponent(Eliminardept))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(FindDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BuscarDepartamento)))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FindDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BuscarDepartamento)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(deptId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deptname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Restablecerdept)
                            .addComponent(Registrardept))
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Eliminardept)
                    .addComponent(updatedept))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Departamentos", jPanel2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Numero de empleado:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Titulo:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Desde:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Hasta:");

        dateday.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        todateday.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        datemonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        datemonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        todatemonth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todatemonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        dateyear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        todateyear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        addtitles.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addtitles.setText("Agregar titulos");

        Tablatitulos.setModel(modelo3);
        Tablatitulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablatitulosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TablatitulosMouseExited(evt);
            }
        });
        jScrollPane3.setViewportView(Tablatitulos);

        Restablecertitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Restablecertitle.setText("Restablecer");
        Restablecertitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecertitleActionPerformed(evt);
            }
        });

        Registrartitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Registrartitle.setText("Registrar");
        Registrartitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrartitleActionPerformed(evt);
            }
        });

        Eliminartitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Eliminartitle.setText("Eliminar");
        Eliminartitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminartitleActionPerformed(evt);
            }
        });

        updatetitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatetitle.setText("Actualizar");
        updatetitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetitleActionPerformed(evt);
            }
        });

        BuscarTitulo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarTitulo.setText("Buscar");
        BuscarTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarTituloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updatetitle)
                        .addGap(103, 103, 103)
                        .addComponent(Eliminartitle))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel9))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(dateday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(datemonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(todateday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(todatemonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dateyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(todateyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(Restablecertitle)
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Numemp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addComponent(Registrartitle))))
                                    .addComponent(Title, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(102, 102, 102))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(addtitles)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(FindTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BuscarTitulo)))))
                .addGap(28, 28, 28))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(addtitles)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Numemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(datemonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(todateday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(todatemonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(todateyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Registrartitle)
                            .addComponent(Restablecertitle))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(26, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FindTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarTitulo))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Eliminartitle)
                    .addComponent(updatetitle))
                .addGap(69, 69, 69))
        );

        jTabbedPane2.addTab("Titulos", jPanel3);

        Tablagerente.setModel(modelo6);
        Tablagerente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablagerenteMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TablagerenteMouseExited(evt);
            }
        });
        jScrollPane6.setViewportView(Tablagerente);

        RestablecerMan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RestablecerMan.setText("Restablecer");
        RestablecerMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecerManActionPerformed(evt);
            }
        });

        RegistrarMan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RegistrarMan.setText("Registrar");
        RegistrarMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarManActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Numero de empleado:");

        Numemp2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("Departamento: ");

        departamento1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        departamento1.setToolTipText("");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("Desde:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("Hasta:");

        dateday3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        datemonth3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        dateyear3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        todateday3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        todatemonth3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        todateyear3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        EliminarMan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EliminarMan.setText("Eliminar");
        EliminarMan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminarManMouseClicked(evt);
            }
        });
        EliminarMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarManActionPerformed(evt);
            }
        });

        updateMan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateMan.setText("Actualizar");
        updateMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateManActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("Gerente de departamento");

        BuscarGerente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarGerente.setText("Buscar");
        BuscarGerente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarGerenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateMan)
                        .addGap(89, 89, 89)
                        .addComponent(EliminarMan))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(RestablecerMan)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel23)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(todateday3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel25)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                                .addComponent(dateday3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel22)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(departamento1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel4Layout.createSequentialGroup()
                                                    .addComponent(datemonth3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dateyear3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel4Layout.createSequentialGroup()
                                                    .addComponent(todatemonth3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(todateyear3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Numemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(96, 96, 96)
                                        .addComponent(RegistrarMan)))
                                .addGap(73, 73, 73))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(FindGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BuscarGerente)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RestablecerMan)
                            .addComponent(RegistrarMan)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(FindGerente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BuscarGerente)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(Numemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel23)
                                    .addComponent(departamento1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(dateday3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datemonth3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateyear3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(todateday3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(todatemonth3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(todateyear3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EliminarMan)
                    .addComponent(updateMan))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Gerente de departamento", jPanel4);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Numero de empleado:");

        Numempleado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Salario:");

        Salario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Salario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalarioActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Desde:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Hasta:");

        dateday1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateday1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        todateday1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateday1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        datemonth1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        datemonth1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        todatemonth1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todatemonth1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        dateyear1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateyear1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        todateyear1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateyear1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        Tablasalarios.setModel(modelo5);
        Tablasalarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablasalariosMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                TablasalariosMouseExited(evt);
            }
        });
        jScrollPane4.setViewportView(Tablasalarios);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Administrar pagos");

        Registrarsal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Registrarsal.setText("Registrar");
        Registrarsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarsalActionPerformed(evt);
            }
        });

        Restablecersal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Restablecersal.setText("Restablecer");
        Restablecersal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecersalActionPerformed(evt);
            }
        });

        Eliminarsal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Eliminarsal.setText("Eliminar");
        Eliminarsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarsalActionPerformed(evt);
            }
        });

        updatetitle1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatetitle1.setText("Actualizar");
        updatetitle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetitle1ActionPerformed(evt);
            }
        });

        BuscarSalario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarSalario.setText("Buscar");
        BuscarSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarSalarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updatetitle1)
                        .addGap(52, 52, 52)
                        .addComponent(Eliminarsal))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel16))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Restablecersal, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel14))
                                                .addGap(49, 49, 49)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(dateday1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(todateday1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addComponent(Registrarsal))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(datemonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(todatemonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(todateyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Salario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Numempleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Findsalario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BuscarSalario)))))
                .addGap(56, 56, 56))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Numempleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(Salario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datemonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateday1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(todateday1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todatemonth1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todateyear1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Restablecersal)
                            .addComponent(Registrarsal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Findsalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarSalario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatetitle1)
                    .addComponent(Eliminarsal))
                .addGap(32, 32, 32))
        );

        jTabbedPane2.addTab("Salarios", jPanel5);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Numero de empleado:");

        Numemp1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Departamento: ");

        departamento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departamentoActionPerformed(evt);
            }
        });

        Registraremp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Registraremp.setText("Registrar");
        Registraremp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarempActionPerformed(evt);
            }
        });

        Restableceremp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Restableceremp.setText("Restablecer");
        Restableceremp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestablecerempActionPerformed(evt);
            }
        });

        Eliminaremp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Eliminaremp.setText("Eliminar");
        Eliminaremp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarempActionPerformed(evt);
            }
        });

        updateemp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateemp.setText("Actualizar");
        updateemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateempActionPerformed(evt);
            }
        });

        Tabladept_emp.setModel(modelo4);
        Tabladept_emp.setCellSelectionEnabled(true);
        Tabladept_emp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabladept_empMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Tabladept_empMouseExited(evt);
            }
        });
        jScrollPane5.setViewportView(Tabladept_emp);

        dateday2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateday2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        todateday2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateday2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        datemonth2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        datemonth2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        todatemonth2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todatemonth2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        dateyear2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dateyear2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        todateyear2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        todateyear2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950" }));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Desde:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Hasta:");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setText("Departamento - Empleado ");

        BuscarEmp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BuscarEmp.setText("Buscar");
        BuscarEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateemp)
                        .addGap(72, 72, 72)
                        .addComponent(Eliminaremp))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(todateday2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dateday2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(32, 32, 32)))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addComponent(datemonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(26, 26, 26)
                                            .addComponent(dateyear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Numemp1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(departamento, javax.swing.GroupLayout.Alignment.TRAILING, 0, 160, Short.MAX_VALUE)))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(todatemonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(todateyear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(Restableceremp)
                                        .addGap(71, 71, 71)
                                        .addComponent(Registraremp))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(101, 101, 101)
                                        .addComponent(jLabel27)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(Findemp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BuscarEmp)))))
                .addGap(57, 57, 57))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Findemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarEmp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(Numemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateday2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datemonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateyear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(todateday2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todatemonth2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todateyear2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Registraremp)
                            .addComponent(Restableceremp))
                        .addGap(33, 33, 33))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Eliminaremp)
                    .addComponent(updateemp))
                .addGap(19, 19, 19))
        );

        jTabbedPane2.addTab("Departamento Empleados", jPanel6);

        NominaBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        NominaBtn.setText("Nomina");
        NominaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NominaBtnActionPerformed(evt);
            }
        });

        EmpleadosBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EmpleadosBtn.setText("Sistema Nomina");
        EmpleadosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpleadosBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EmpleadosBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NominaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(NominaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EmpleadosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 255, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PrimernombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimernombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrimernombreActionPerformed

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
   
    var errores=validator.CheckEmp(Primernombre.getText(),Apellido.getText());
    String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
        try {
            
        // TODO add your handling code here:
        df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
        String birth_date = birthyear.getSelectedItem().toString() + "-" + (birthmonth.getSelectedIndex()+1) + "-" + birthday.getSelectedItem().toString();
        String birth_date1 =conyear.getSelectedItem().toString() + "-" + (conmonth.getSelectedIndex()+1) + "-" + conday.getSelectedItem().toString();
        
        Date det = df.parse(birth_date);
        Date det1 = df.parse(birth_date1);
        java.sql.Date sqdet = new java.sql.Date(det.getTime());
        java.sql.Date sqdet1 = new java.sql.Date(det1.getTime()); 
        
          System.out.println(sqdet);
     
            
                
                 i.setEmpleados(userId(), sqdet, Primernombre.getText(), Apellido.getText(), (String) Genero.getSelectedItem(), sqdet1);
             modelo=s.getEmpleados();
     
            TablaEmpleados.setModel(modelo);
             modelo.fireTableDataChanged();
             
    
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (RemoteException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    }//GEN-LAST:event_RegistrarActionPerformed

    private void RestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecerActionPerformed
        // TODO add your handling code here:
        Primernombre.setText("");
        Apellido.setText("");
        Genero.setSelectedIndex(0);
        birthday.setSelectedIndex(0);
        birthmonth.setSelectedIndex(0);
        birthyear.setSelectedIndex(0);
        conday.setSelectedIndex(0);
        conmonth.setSelectedIndex(0);
        conyear.setSelectedIndex(0);
        Findemployee.setText("");
        
    }//GEN-LAST:event_RestablecerActionPerformed

    private void RestablecerdeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecerdeptActionPerformed
        // TODO add your handling code here:
        deptId.setText("");
        deptname.setText("");
        FindDepartment.setText("");
    }//GEN-LAST:event_RestablecerdeptActionPerformed

    private void RestablecertitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecertitleActionPerformed
        // TODO add your handling code here:
        Numemp.setText("");
        Title.setText("");
        FindTitle.setText("");
        dateday.setSelectedIndex(0);
        datemonth.setSelectedIndex(0);
        dateyear.setSelectedIndex(0);
        todateday.setSelectedIndex(0);
        todatemonth.setSelectedIndex(0);
        todateyear.setSelectedIndex(0);
    }//GEN-LAST:event_RestablecertitleActionPerformed

    private void RestablecersalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecersalActionPerformed
        // TODO add your handling code here:
        Numempleado.setText("");
        Salario.setText("");
        Findsalario.setText("");
        dateday1.setSelectedIndex(0);
        datemonth1.setSelectedIndex(0);
        dateyear1.setSelectedIndex(0);
        todateday1.setSelectedIndex(0);
        todatemonth1.setSelectedIndex(0);
        todateyear1.setSelectedIndex(0);
    }//GEN-LAST:event_RestablecersalActionPerformed

    private void RestablecerempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecerempActionPerformed
        // TODO add your handling code here:
        Numemp1.setText("");
        Findemp.setText("");
        departamento.setSelectedIndex(0);
        dateday2.setSelectedIndex(0);
        datemonth2.setSelectedIndex(0);
        dateyear2.setSelectedIndex(0);
        todateday2.setSelectedIndex(0);
        todatemonth2.setSelectedIndex(0);
        todateyear2.setSelectedIndex(0);
    }//GEN-LAST:event_RestablecerempActionPerformed

    private void RegistrardeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrardeptActionPerformed
   
        // TODO add your handling code here:
         String id = deptId.getText();
        String name = deptname.getText();
         var errores=validator.CheckDept(name,id);
    String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
    try {
        i.setDepartamentos( id,  name);
          modelo2 =s.getDepartamentos();
            Tabladepartamentos.setModel(modelo2);
             modelo2.fireTableDataChanged();
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
   
        }
    }//GEN-LAST:event_RegistrardeptActionPerformed

    private void RegistrartitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrartitleActionPerformed
         var errores=validator.CheckDept(Title.getText(),Numemp.getText());
    String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
            
        try {
            if (s.getExisteemployee(Numemp.getText())==false) {
            JOptionPane.showMessageDialog(null, "Este usuario no existe, por favor ingrese un usuario valido");

            }
            else{
                
            
            df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
            String birth_date = dateyear.getSelectedItem().toString() + "-" + (datemonth.getSelectedIndex() + 1) + "-" + dateday.getSelectedItem().toString();
            String birth_date1 = todateyear.getSelectedItem().toString() + "-" + (todatemonth.getSelectedIndex() + 1) + "-" + todateday.getSelectedItem().toString();

            Date det = df.parse(birth_date);
            Date det1 = df.parse(birth_date1);
            java.sql.Date sqdet = new java.sql.Date(det.getTime());
            java.sql.Date sqdet1 = new java.sql.Date(det1.getTime());
            System.out.println(sqdet);
    
                i.setTitulos(Numemp.getText(), Title.getText(), sqdet, sqdet1);
                    modelo3 =s.getTitulos();
             Tablatitulos.setModel(modelo3);
             modelo3.fireTableDataChanged();
            }
        } catch (ParseException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }}
    }//GEN-LAST:event_RegistrartitleActionPerformed

    private void RegistrarsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarsalActionPerformed
          var errores=validator.CheckSalaries(Numempleado.getText(), Salario.getText());
    String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
            
        try {    
            try {
                if (s.getExisteemployee(Numempleado.getText())==false) {
                    JOptionPane.showMessageDialog(null, "Este usuario no existe, por favor ingrese un usuario valido");
                    
                }else{
                    
                    
                    df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                    String birth_date = dateyear1.getSelectedItem().toString() + "-" + (datemonth1.getSelectedIndex() + 1) + "-" + dateday1.getSelectedItem().toString();
                    String birth_date1 = todateyear1.getSelectedItem().toString() + "-" + (todatemonth1.getSelectedIndex() + 1) + "-" + todateday1.getSelectedItem().toString();
                    
                    Date det = df.parse(birth_date);
                    Date det1 = df.parse(birth_date1);
                    java.sql.Date sqdet = new java.sql.Date(det.getTime());
                    java.sql.Date sqdet1 = new java.sql.Date(det1.getTime());
                    System.out.println(sqdet);
                    try {
                        
                        i.setSalarios(Numempleado.getText(), Salario.getText(), sqdet, sqdet1);
                        modelo5 =s.getSalarios();
                        Tablasalarios.setModel(modelo5);
                        modelo5.fireTableDataChanged();
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParseException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_RegistrarsalActionPerformed

    private void RegistrarempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarempActionPerformed
          var errores=validator.CheckDeptEmp(Numemp1.getText());
    String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
        try {
            try {
                if (s.getExisteemployee(Numemp1.getText())==false) {
                    JOptionPane.showMessageDialog(null, "Este usuario no existe, por favor ingrese un usuario valido");
                    
                }else{
                    
                    
                    df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                    String birth_date = dateyear2.getSelectedItem().toString() + "-" + (datemonth2.getSelectedIndex() + 1) + "-" + dateday2.getSelectedItem().toString();
                    String birth_date1 = todateyear2.getSelectedItem().toString() + "-" + (todatemonth2.getSelectedIndex() + 1) + "-" + todateday2.getSelectedItem().toString();
                    
                    Date det = df.parse(birth_date);
                    Date det1 = df.parse(birth_date1);
                    java.sql.Date sqdet = new java.sql.Date(det.getTime());
                    java.sql.Date sqdet1 = new java.sql.Date(det1.getTime());
                    System.out.println(sqdet);
                    try {
                        
                        
                        i.setDept_emp(Numemp1.getText(), (String) departamento.getSelectedItem(), sqdet, sqdet1);
                        modelo4 =s.getDept_Emp();
                        Tabladept_emp.setModel(modelo4);
                        modelo4.fireTableDataChanged();
                        
                    } catch (ParseException ex) {
                        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ParseException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        }}
    }//GEN-LAST:event_RegistrarempActionPerformed

    private void RestablecerManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestablecerManActionPerformed
        // TODO add your handling code here:
        Numemp2.setText("");
        FindGerente.setText("");
        departamento1.setSelectedIndex(0);
        dateday3.setSelectedIndex(0);
        datemonth3.setSelectedIndex(0);
        dateyear3.setSelectedIndex(0);
        todateday3.setSelectedIndex(0);
        todatemonth3.setSelectedIndex(0);
        todateyear3.setSelectedIndex(0);
    }//GEN-LAST:event_RestablecerManActionPerformed

    private void RegistrarManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarManActionPerformed
      var errores=validator.CheckDeptEmp(Numemp2.getText());
        String txt=" ";
            for (String error:errores) {
                txt=txt+error+"\n";
            }
        if (!txt.equals(" ")) {
            
         JOptionPane.showMessageDialog(null, txt);

        }else{
            
        try {
            if (s.getExisteemployee(Numemp2.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Este usuario no existe, por favor ingrese un usuario valido");

            } else {

                df = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                String birth_date = dateyear3.getSelectedItem().toString() + "-" + (datemonth3.getSelectedIndex() + 1) + "-" + dateday3.getSelectedItem().toString();
                String birth_date1 = todateyear3.getSelectedItem().toString() + "-" + (todatemonth3.getSelectedIndex() + 1) + "-" + todateday3.getSelectedItem().toString();

                Date det = df.parse(birth_date);
                Date det1 = df.parse(birth_date1);
                java.sql.Date sqdet = new java.sql.Date(det.getTime());
                java.sql.Date sqdet1 = new java.sql.Date(det1.getTime());
                System.out.println(sqdet);
                //String[] empleadoR = new String[6];

                i.setDept_manager(Numemp2.getText(), (String) departamento1.getSelectedItem(), sqdet, sqdet1);
                modelo6 = s.getDept_Manager();
                Tablagerente.setModel(modelo6);
                modelo6.fireTableDataChanged();
            }
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }}
    }//GEN-LAST:event_RegistrarManActionPerformed

    private void EliminarsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarsalActionPerformed
    try {
        //if (dato.equals(d.setDeleteSalaries(dato, dato2)[0]) && dato1.equals(d.setDeleteSalaries(dato, dato2)[2])) {
            d.setDeleteSalaries(dato, dato2);
            int fila = Tablasalarios.getSelectedRow();
            
            if (fila >= 0) {
                modelo5.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el salario");
                dato=null;
                dato1=null;
            }
        //}
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EliminarsalActionPerformed

    private void TablasalariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablasalariosMouseClicked
        // TODO add your handling code here:
        seleccionar = Tablasalarios.rowAtPoint(evt.getPoint());
        
        dato = String.valueOf(Tablasalarios.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(Tablasalarios.getValueAt(seleccionar, 1));
        dato2 = String.valueOf(Tablasalarios.getValueAt(seleccionar, 2));
        dato3 = String.valueOf(Tablasalarios.getValueAt(seleccionar, 3));
        
          
    }//GEN-LAST:event_TablasalariosMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

    try {
        u.updateEmpleados(dato,java.sql.Date.valueOf(dato1) , dato2, dato3, dato4, java.sql.Date.valueOf(dato5));
        /*try {
        // TODO add your handling code here:
        int fila = TablaEmpleados.getRowCount();
        for (int i = fila; i >=0; i++) {
        modelo.removeRow(i);
        }
        getEmpleados();
        } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updateActionPerformed
//s
    private void TablaEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEmpleadosMouseClicked
        // TODO add your handling code here:
        seleccionar = TablaEmpleados.rowAtPoint(evt.getPoint());
        
        dato = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 1));
        dato2 = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 2));
        dato3 = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 3));
        dato4 = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 4));
        dato5 = String.valueOf(TablaEmpleados.getValueAt(seleccionar, 5));
        
    }//GEN-LAST:event_TablaEmpleadosMouseClicked

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
    try {
        if (dato.equals(d.setDeleteEmpleados(dato)[0])) {
            int fila = TablaEmpleados.getSelectedRow();
            
            if (fila >= 0) {
                modelo.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el usuario");
                dato=null;
            }
        }
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EliminarActionPerformed

    private void EliminardeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminardeptActionPerformed
    try {
        if (dato.equals(d.setDeleteDepartamento(dato)[0])) {
            int fila = Tabladepartamentos.getSelectedRow();
            
            if (fila >= 0) {
                modelo2.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el departamento");
                dato=null;
                
            }
        }
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EliminardeptActionPerformed

    private void TabladepartamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabladepartamentosMouseClicked
        // TODO add your handling code here:
        
        seleccionar = Tabladepartamentos.rowAtPoint(evt.getPoint());
        dato = String.valueOf(Tabladepartamentos.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(Tabladepartamentos.getValueAt(seleccionar, 1));
        System.out.println(dato);
    }//GEN-LAST:event_TabladepartamentosMouseClicked

    private void EliminartitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminartitleActionPerformed
    try {
        //if (dato.equals(d.setDeleteTitulos(dato, dato2)[0]) && dato1.equals(d.setDeleteTitulos(dato, dato2)[2])) {
            d.setDeleteTitulos(dato, dato2);
            int fila = Tablatitulos.getSelectedRow();
            
            if (fila >= 0) {
                modelo3.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el titulo");
                dato=null;
                dato2=null;
            }
        //}
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EliminartitleActionPerformed

    private void TablatitulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablatitulosMouseClicked
        // TODO add your handling code here:
        seleccionar = Tablatitulos.rowAtPoint(evt.getPoint());
        dato = String.valueOf(Tablatitulos.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(Tablatitulos.getValueAt(seleccionar, 1));
        dato2 = String.valueOf(Tablatitulos.getValueAt(seleccionar, 2));
        dato3 = String.valueOf(Tablatitulos.getValueAt(seleccionar, 3));
        
        
    }//GEN-LAST:event_TablatitulosMouseClicked

    private void EliminarManMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminarManMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_EliminarManMouseClicked

    private void EliminarManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarManActionPerformed
    try {
        //if (dato.equals(d.setDeleteGerente(dato, dato1)[0]) && dato1.equals(d.setDeleteGerente(dato, dato1)[1])) {
            d.setDeleteGerente(dato, dato2);
            int fila = Tablagerente.getSelectedRow();
            
            if (fila >= 0) {
                modelo6.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el gerente");
                dato=null;
                dato2=null;
            }
        //}
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EliminarManActionPerformed

    private void TablagerenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablagerenteMouseClicked
        // TODO add your handling code here:
        seleccionar = Tablagerente.rowAtPoint(evt.getPoint());
        dato = String.valueOf(Tablagerente.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(Tablagerente.getValueAt(seleccionar, 1));
        dato2 = String.valueOf(Tablagerente.getValueAt(seleccionar, 2));
        dato3 = String.valueOf(Tablagerente.getValueAt(seleccionar, 3));
        
    }//GEN-LAST:event_TablagerenteMouseClicked

    private void EliminarempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarempActionPerformed
    try {
        //if (dato.equals(d.setDeleteDept_emp(dato, dato1)[0]) && dato1.equals(d.setDeleteDept_emp(dato, dato1)[1])) {
            d.setDeleteDept_emp(dato, dato2);
            int fila = Tabladept_emp.getSelectedRow();
            
            if (fila >= 0) {
                modelo4.removeRow(fila);
                JOptionPane.showMessageDialog(null, "Se elimino el dept_emp");
                dato=null;
                dato2=null;
            }
        //}
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        
    }//GEN-LAST:event_EliminarempActionPerformed

    private void Tabladept_empMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabladept_empMouseClicked
        // TODO add your handling code here:
        seleccionar = Tabladept_emp.rowAtPoint(evt.getPoint());
        dato = String.valueOf(Tabladept_emp.getValueAt(seleccionar, 0));
        dato1 = String.valueOf(Tabladept_emp.getValueAt(seleccionar, 1));
        dato2 = String.valueOf(Tabladept_emp.getValueAt(seleccionar, 2));
        dato3 = String.valueOf(Tabladept_emp.getValueAt(seleccionar, 3));
        
    }//GEN-LAST:event_Tabladept_empMouseClicked

    private void updatedeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedeptActionPerformed
    try {
        // TODO add your handling code here:
        u.updateDepartamentos(dato, dato1);
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updatedeptActionPerformed

    private void updatetitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetitleActionPerformed
    try {
        // TODO add your handling code here:
        u.updateTitulos(dato, dato1, java.sql.Date.valueOf(dato2) , java.sql.Date.valueOf(dato3));
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updatetitleActionPerformed

    private void updateManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateManActionPerformed
    try {
        // TODO add your handling code here:
        u.updateDept_manager(dato, dato1, java.sql.Date.valueOf(dato2), java.sql.Date.valueOf(dato3));
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updateManActionPerformed

    private void updatetitle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetitle1ActionPerformed
    try {
        // TODO add your handling code here:
        u.updateSalarios(dato, dato1, java.sql.Date.valueOf(dato2), java.sql.Date.valueOf(dato3));
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updatetitle1ActionPerformed

    private void updateempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateempActionPerformed
    try {
        // TODO add your handling code here:
        u.updateDept_emp(dato, dato1,java.sql.Date.valueOf(dato2), java.sql.Date.valueOf(dato3));
    } catch (ParseException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_updateempActionPerformed

    private void TablaEmpleadosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEmpleadosMouseExited
        // TODO add your handling code here:     
        
    }//GEN-LAST:event_TablaEmpleadosMouseExited

    private void TabladepartamentosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabladepartamentosMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_TabladepartamentosMouseExited

    private void TablatitulosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablatitulosMouseExited
        // TODO add your handling code here:
   
    }//GEN-LAST:event_TablatitulosMouseExited

    private void TablagerenteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablagerenteMouseExited
        // TODO add your handling code here:

        
    }//GEN-LAST:event_TablagerenteMouseExited

    private void TablasalariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablasalariosMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_TablasalariosMouseExited

    private void Tabladept_empMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabladept_empMouseExited
        // TODO add your handling code here:

        
    }//GEN-LAST:event_Tabladept_empMouseExited

    private void SalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SalarioActionPerformed

    private void departamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departamentoActionPerformed

    private void BuscarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarEmpleadoActionPerformed
    try {
        // TODO add your handling code here:
        if (Findemployee.getText().isEmpty()) {
            modelo =s.getEmpleados();
            TablaEmpleados.setModel(modelo);
        }else{
            
            modelo =s.FindEmpleados(Integer.parseInt(Findemployee.getText()));
            TablaEmpleados.setModel(modelo);
        } 
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BuscarEmpleadoActionPerformed

    private void BuscarDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarDepartamentoActionPerformed
        // TODO add your handling code here:
        try {
        // TODO add your handling code here:
        if (FindDepartment.getText().isEmpty()) {
            modelo2 =s.getDepartamentos();
            Tabladepartamentos.setModel(modelo2);
        }else{
            
            modelo2 =s.FindDepartamentos(FindDepartment.getText());
            Tabladepartamentos.setModel(modelo2);
        } 
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_BuscarDepartamentoActionPerformed

    private void BuscarTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarTituloActionPerformed
        // TODO add your handling code here:
                try {
            if (FindTitle.getText().isEmpty()) {
                modelo3 = s.getTitulos();
                Tablatitulos.setModel(modelo3);
            } else {

                modelo3 = s.FindTitulos(Integer.parseInt(FindTitle.getText()));
                Tablatitulos.setModel(modelo3);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BuscarTituloActionPerformed

    private void BuscarGerenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarGerenteActionPerformed
        // TODO add your handling code here:
        try {
            if (FindGerente.getText().isEmpty()) {
                modelo6 = s.getDept_Manager();
                Tablagerente.setModel(modelo6);
            } else {

                modelo6 = s.FindDept_Manager(Integer.parseInt(FindGerente.getText()));
                Tablagerente.setModel(modelo6);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BuscarGerenteActionPerformed

    private void BuscarEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarEmpActionPerformed
        // TODO add your handling code here:
        try {
            if (Findemp.getText().isEmpty()) {
                modelo4 = s.getDept_Emp();
                Tabladept_emp.setModel(modelo4);
            } else {

                modelo4 = s.FindDept_Emp(Integer.parseInt(Findemp.getText()));
                Tabladept_emp.setModel(modelo4);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BuscarEmpActionPerformed

    private void BuscarSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarSalarioActionPerformed
        // TODO add your handling code here:
        try {
            if (Findsalario.getText().isEmpty()) {
                modelo5 = s.getSalarios();
                Tablasalarios.setModel(modelo5);
            } else {

                modelo5 = s.FindSalarios(Integer.parseInt(Findsalario.getText()));
                Tablasalarios.setModel(modelo5);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_BuscarSalarioActionPerformed

    private void EmpleadosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpleadosBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            new SistemaNomina().setVisible(true);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EmpleadosBtnActionPerformed

    private void NominaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NominaBtnActionPerformed
    try {
        // TODO add your handling code here:
        new Nomina().setVisible(true);
    } catch (SQLException ex) {
        Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
    }
        dispose();
    }//GEN-LAST:event_NominaBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Empleados().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Empleados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
 
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Apellido;
    private javax.swing.JButton BuscarDepartamento;
    private javax.swing.JButton BuscarEmp;
    private javax.swing.JButton BuscarEmpleado;
    private javax.swing.JButton BuscarGerente;
    private javax.swing.JButton BuscarSalario;
    private javax.swing.JButton BuscarTitulo;
    private javax.swing.JLabel Contratacion;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton EliminarMan;
    private javax.swing.JButton Eliminardept;
    private javax.swing.JButton Eliminaremp;
    private javax.swing.JButton Eliminarsal;
    private javax.swing.JButton Eliminartitle;
    private javax.swing.JButton EmpleadosBtn;
    private javax.swing.JTextField FindDepartment;
    private javax.swing.JTextField FindGerente;
    private javax.swing.JTextField FindTitle;
    private javax.swing.JTextField Findemp;
    private javax.swing.JTextField Findemployee;
    private javax.swing.JTextField Findsalario;
    private javax.swing.JComboBox<String> Genero;
    private javax.swing.JButton NominaBtn;
    private javax.swing.JTextField Numemp;
    private javax.swing.JTextField Numemp1;
    private javax.swing.JTextField Numemp2;
    private javax.swing.JTextField Numempleado;
    private javax.swing.JTextField Primernombre;
    private javax.swing.JButton Registrar;
    private javax.swing.JButton RegistrarMan;
    private javax.swing.JButton Registrardept;
    private javax.swing.JButton Registraremp;
    private javax.swing.JButton Registrarsal;
    private javax.swing.JButton Registrartitle;
    private javax.swing.JButton Restablecer;
    private javax.swing.JButton RestablecerMan;
    private javax.swing.JButton Restablecerdept;
    private javax.swing.JButton Restableceremp;
    private javax.swing.JButton Restablecersal;
    private javax.swing.JButton Restablecertitle;
    private javax.swing.JTextField Salario;
    private javax.swing.JTable TablaEmpleados;
    private javax.swing.JTable Tabladepartamentos;
    private javax.swing.JTable Tabladept_emp;
    private javax.swing.JTable Tablagerente;
    private javax.swing.JTable Tablasalarios;
    private javax.swing.JTable Tablatitulos;
    private javax.swing.JTextField Title;
    private javax.swing.JLabel addtitles;
    private javax.swing.JComboBox<String> birthday;
    private javax.swing.JComboBox<String> birthmonth;
    private javax.swing.JComboBox<String> birthyear;
    private javax.swing.JComboBox<String> conday;
    private javax.swing.JComboBox<String> conmonth;
    private javax.swing.JComboBox<String> conyear;
    private javax.swing.JComboBox<String> dateday;
    private javax.swing.JComboBox<String> dateday1;
    private javax.swing.JComboBox<String> dateday2;
    private javax.swing.JComboBox<String> dateday3;
    private javax.swing.JComboBox<String> datemonth;
    private javax.swing.JComboBox<String> datemonth1;
    private javax.swing.JComboBox<String> datemonth2;
    private javax.swing.JComboBox<String> datemonth3;
    private javax.swing.JComboBox<String> dateyear;
    private javax.swing.JComboBox<String> dateyear1;
    private javax.swing.JComboBox<String> dateyear2;
    private javax.swing.JComboBox<String> dateyear3;
    private javax.swing.JComboBox<String> departamento;
    private javax.swing.JComboBox<String> departamento1;
    private javax.swing.JTextField deptId;
    private javax.swing.JTextField deptname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox<String> todateday;
    private javax.swing.JComboBox<String> todateday1;
    private javax.swing.JComboBox<String> todateday2;
    private javax.swing.JComboBox<String> todateday3;
    private javax.swing.JComboBox<String> todatemonth;
    private javax.swing.JComboBox<String> todatemonth1;
    private javax.swing.JComboBox<String> todatemonth2;
    private javax.swing.JComboBox<String> todatemonth3;
    private javax.swing.JComboBox<String> todateyear;
    private javax.swing.JComboBox<String> todateyear1;
    private javax.swing.JComboBox<String> todateyear2;
    private javax.swing.JComboBox<String> todateyear3;
    private javax.swing.JButton update;
    private javax.swing.JButton updateMan;
    private javax.swing.JButton updatedept;
    private javax.swing.JButton updateemp;
    private javax.swing.JButton updatetitle;
    private javax.swing.JButton updatetitle1;
    // End of variables declaration//GEN-END:variables
@Override
    public void actionPerformed(ActionEvent e) {
    if (e.getSource() == birthmonth) {
        
            int days = 31;
            System.out.println("months");
            if (birthmonth.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (birthmonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(birthyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (birthmonth.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (birthmonth.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (birthmonth.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (birthmonth.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (birthmonth.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (birthmonth.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (birthmonth.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (birthmonth.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (birthmonth.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (birthmonth.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            birthday.removeAllItems();
            for (int i = 1; i < days; i++) {
               birthday.addItem("" + i);
            }
         } else if (e.getSource() == birthyear) {
            int days = birthday.getItemCount() + 1;
            if (birthmonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(birthyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            birthday.removeAllItems();
            for (int i = 1; i < days; i++) {
               birthday.addItem("" + i);
            }
         }
    
     if (e.getSource() == conmonth) {
        
            int days = 31;
            System.out.println("months");
            if (conmonth.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (conmonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(conyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (conmonth.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (conmonth.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (conmonth.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (conmonth.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (conmonth.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (conmonth.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (conmonth.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (conmonth.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (conmonth.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (conmonth.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            conday.removeAllItems();
            for (int i = 1; i < days; i++) {
               conday.addItem("" + i);
            }
         } else if (e.getSource() == conyear) {
            int days = conday.getItemCount() + 1;
            if (conmonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(conyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            conday.removeAllItems();
            for (int i = 1; i < days; i++) {
               conday.addItem("" + i);
            }
         }
     if (e.getSource() == datemonth) {
        
            int days = 31;
            System.out.println("months");
            if (datemonth.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (datemonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (datemonth.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (datemonth.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (datemonth.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (datemonth.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (datemonth.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (datemonth.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (datemonth.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (datemonth.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (datemonth.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (datemonth.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            dateday.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday.addItem("" + i);
            }
         } else if (e.getSource() == dateyear) {
            int days = dateday.getItemCount() + 1;
            if (datemonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            dateday.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday.addItem("" + i);
            }
         }
     if (e.getSource() == todatemonth) {
        
            int days = 31;
            System.out.println("months");
            if (todatemonth.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (todatemonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (todatemonth.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (todatemonth.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (todatemonth.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (todatemonth.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (todatemonth.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (todatemonth.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (todatemonth.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (todatemonth.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (todatemonth.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (todatemonth.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            todateday.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday.addItem("" + i);
            }
         } else if (e.getSource() == todateyear) {
            int days = todateday.getItemCount() + 1;
            if (todatemonth.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            todateday.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday.addItem("" + i);
            }
         }
     if (e.getSource() == datemonth1) {
        
            int days = 31;
            System.out.println("months");
            if (datemonth1.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (datemonth1.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear1.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (datemonth1.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (datemonth1.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (datemonth1.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (datemonth1.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (datemonth1.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (datemonth1.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (datemonth1.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (datemonth1.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (datemonth1.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (datemonth1.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            dateday1.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday1.addItem("" + i);
            }
         } else if (e.getSource() == dateyear1) {
            int days = dateday1.getItemCount() + 1;
            if (datemonth1.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear1.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            dateday1.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday1.addItem("" + i);
            }
         }
     if (e.getSource() == todatemonth1) {
        
            int days = 31;
            System.out.println("months");
            if (todatemonth1.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (todatemonth1.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear1.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (todatemonth1.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (todatemonth1.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            todateday1.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday1.addItem("" + i);
            }
         } else if (e.getSource() == todateyear1) {
            int days = todateday1.getItemCount() + 1;
            if (todatemonth1.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear1.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            todateday1.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday1.addItem("" + i);
            }
         }
     if (e.getSource() == datemonth2) {
        
            int days = 31;
            System.out.println("months");
            if (datemonth2.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (datemonth2.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear2.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (datemonth2.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (datemonth2.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (datemonth2.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (datemonth2.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (datemonth2.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (datemonth2.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (datemonth2.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (datemonth2.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (datemonth2.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (datemonth2.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            dateday2.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday2.addItem("" + i);
            }
         } else if (e.getSource() == dateyear2) {
            int days = dateday2.getItemCount() + 1;
            if (datemonth2.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear2.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            dateday2.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday2.addItem("" + i);
            }
         }
     if (e.getSource() == todatemonth2) {
        
            int days = 31;
            System.out.println("months");
            if (todatemonth2.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (todatemonth2.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear2.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (todatemonth2.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (todatemonth2.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            todateday2.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday2.addItem("" + i);
            }
         } else if (e.getSource() == todateyear2) {
            int days = todateday2.getItemCount() + 1;
            if (todatemonth2.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear2.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            todateday2.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday2.addItem("" + i);
            }
         }
     if (e.getSource() == datemonth3) {
        
            int days = 31;
            System.out.println("months");
            if (datemonth3.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (datemonth3.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear2.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (datemonth3.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (datemonth3.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (datemonth3.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (datemonth3.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (datemonth3.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (datemonth3.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (datemonth3.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (datemonth3.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (datemonth3.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (datemonth3.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            dateday3.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday3.addItem("" + i);
            }
         } else if (e.getSource() == dateyear3) {
            int days = dateday3.getItemCount() + 1;
            if (datemonth3.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(dateyear3.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            dateday3.removeAllItems();
            for (int i = 1; i < days; i++) {
               dateday3.addItem("" + i);
            }
         }
     if (e.getSource() == todatemonth3) {
        
            int days = 31;
            System.out.println("months");
            if (todatemonth3.getSelectedItem().toString().equals("Enero")) {
               days = 32;
               System.out.println("january");

            }
            if (todatemonth3.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear3.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            if (todatemonth3.getSelectedItem().toString().equals("Marzo")) {
               days = 32;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Abril")) {
               days = 31;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Mayo")) {
               days = 32;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Junio")) {
               days = 31;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Julio")) {
               days = 32;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Agosto")) {
               days = 32;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Septiembre")) {
               days = 31;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Octubre")) {
               days = 32;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Noviembre")) {
               days = 31;
            }
            if (todatemonth3.getSelectedItem().toString().equals("Diciembre")) {
               days = 32;
            }
            todateday3.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday3.addItem("" + i);
            }
         } else if (e.getSource() == todateyear3) {
            int days = todateday3.getItemCount() + 1;
            if (todatemonth3.getSelectedItem().toString().equals("Febrero")) {
               if (Integer.parseInt(todateyear3.getSelectedItem().toString()) % 4 == 0) {
                  days = 30;
               } else {
                  days = 29;
               }

            }
            todateday3.removeAllItems();
            for (int i = 1; i < days; i++) {
               todateday3.addItem("" + i);
            }
         }
    }
}
